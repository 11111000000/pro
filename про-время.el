;;; про-время.el --- Время, календарь и оповещения -*- lexical-binding: t -*-
;;
;; Автор: Пётр <11111000000@email.com>
;; Версия: 1.2
;; Keywords: time, calendar, reminders, world-clock, lunar
;; URL: https://example.com/про-время
;;
;;; Commentary:
;;
;; Этот файл — всеобъемлющий модуль для управления временем в Emacs, построеный согласно
;; принципам литературного программирования: повествование, где каждая секция мотивируется
;; реальными нуждами пользователя, объясняется её роль в общей экосистеме и связывается
;; с остальными частями.  Мы стремимся к элегантности, минимализму и кроссплатформенности,
;; используя встроенные пакеты Emacs (time, calendar, appt) с минимальными зависимостями,
;; чтобы обеспечить скорость и стабильность.
;;
;; Время — фундаментальный аспект продуктивности.  от простых часов в status-bar до
;; сложных напоминаний, лунных циклов
;; и глобального времени.  Здесь мы раскрываем скрытые особенности, такие как
;; интеграция с diary для персональных событий, таймеры для автоматизации задач,
;; расчёт восходов/закатов и помодоро для фокусировки.  Всё это работает в терминале
;; и GUI, с акцентом на русскоязычную локализацию и эстетику.
;;
;; Структура файла:
;; 0. Введение и зависимости: Базовые require и глобальные установки.
;; 1. Часы и отображение времени: Mode-line часы с кастомизацией.
;; 2. Календарь: Настройка вида, локализация и эстетика.
;; 3. Праздники и выходные: Национальные и лунные события.
;; 4. Лунные фазы: Расчёт и отображение циклов луны.
;; 5. Мировое время: Часы для разных зон с кастомным форматом.
;; 6. Напоминания и оповещения: Appt с интеграцией org и звуком.
;; 7. Конвертеры и вычисления дат: Unix-time, юлианские даты и т.д.
;; 8. Таймеры и автоматизация: Run-at-time, помодоро, будильник.
;; 9. Дополнительные фичи: Восходы/закаты, diary интеграция.
;; 10. Эстетика и удобства: Визуальные улучшения для календаря.
;; 11. Быстрые команды: Мнемонические бинды и шпаргалка.
;; 12. Финал: Provide и ends here.
;;
;; Использование: Загружайте через (require 'про-время) в init.el.  Рекомендуется
;; интегрировать с org-mode для напоминаний и про-внешний-вид для тем.  Если в терминале,
;; некоторые визуальные фичи (шрифты) адаптируются автоматически.
;;
;; Замечания: Мы предпочитаем встроенные функции Emacs для минимизации зависимостей.
;; Закомментированные секции — опции для экспериментов (например, продвинутые таймеры).
;; Добавлены новые настройки: помодоро, sunrise/sunset, расширенные таймеры.

;;; Code:

;;;; 0. Введение и зависимости
;; Начинаем с основ: подключаем встроенные библиотеки Emacs, связанные со временем.
;; Это обеспечивает, что модуль самодостаточен, без нужды в внешних пакетах для
;; базовых функций. Мы также устанавливаем глобальные переменные для consistency.

(require 'time)      ;; Базовые функции времени и часы в mode-line.
(require 'calendar)  ;; Календарь, даты и события.
(require 'holidays)  ;; Праздники и выходные.
(require 'lunar)     ;; Лунные фазы (встроено в calendar).
(require 'solar)     ;; Восходы/закаты (добавлено для новых фич).
(require 'appt)      ;; Напоминания и оповещения.
(require 'timer)     ;; Таймеры и отложенные задачи.

;;;; 1. Часы и отображение времени в Emacs
;; Часы в mode-line — это не просто декор, а практичный инструмент: они напоминают
;; о времени без отвлечения взгляда. Мы используем 24-часовой формат для clarity,
;; добавляем дату и делаем отображение кастомизируемым. Особенность: интеграция
;; с battery для ноутбуков, что полезно для мобильных пользователей.
;; Дополнение: показываем среднюю нагрузку системы для мониторинга производительности.

(setq display-time-24hr-format t)             ;; 24-часовой формат для точности.
(setq display-time-day-and-date t)            ;; Показывать дату для контекста.
(setq display-time-format "%H:%M %a %d.%m")   ;; Пример: 13:52 Пн 31.07 — компактно и информативно.
(setq display-time-load-average t)            ;; Показывать нагрузку системы в mode-line.
(display-time-mode 1)                         ;; Включить отображение в mode-line.

;; Опционально: уровень батареи — полезно для ноутбуков, автоматически проверяет наличие.
(when (and (require 'battery nil t)
           (functionp 'battery))  ;; Проверяем наличие battery.el.
  (display-battery-mode 1))

;;;; 2. Календарь
;; Календарь в Emacs — мощный инструмент, но по умолчанию англоцентричный. Мы
;; локализуем его на русский, начинаем неделю с понедельника (как в России) и
;; добавляем эстетику: фиксированный шрифт для читаемости. Особенность: european
;; формат дат (dd/mm/yyyy) для избежания путаницы с US-стилем.
;; Дополнение: включаем отображение номеров ISO-недель для планирования.

;; Фиксированный шрифт: делает календарь аккуратным, как таблицу в терминале или GUI.
(defun set-calendar-font ()
  "Аккуратный фиксированный шрифт в календаре для лучшей читаемости."
  (set (make-local-variable 'buffer-face-mode-face) 'fixed-pitch)
  (buffer-face-mode t))

(add-hook 'calendar-mode-hook #'set-calendar-font)

(setq calendar-week-start-day 1)              ;; Неделя начинается с понедельника.
(setq calendar-date-style 'european)          ;; dd/mm/yyyy — европейский/российский стандарт.
(setq calendar-iso-weeks t)                   ;; Отображать номера ISO-недель.

;; Русская локализация: полные и сокращённые имена для иммерсии.
(setq calendar-day-name-array ["Воскресенье" "Понедельник" "Вторник" "Среда" "Четверг" "Пятница" "Суббота"])
(setq calendar-day-abbrev-array ["Вс" "Пн" "Вт" "Ср" "Чт" "Пт" "Сб"])
(setq calendar-month-name-array ["Январь" "Февраль" "Март" "Апрель" "Май" "Июнь"
                                 "Июль" "Август" "Сентябрь" "Октябрь" "Ноябрь" "Декабрь"])

(setq calendar-mark-today t)                  ;; Отмечать текущий день для ориентации.

;;;; 3. Праздники и выходные
;; Праздники добавляют контекст: Emacs может отмечать их в календаре, напоминая
;; о важных датах. Мы включаем российские праздники, добавляем лунные и пасхальные,
;; а также переходы на летнее/зимнее время. Особенность: append позволяет легко
;; расширять список пользовательскими праздниками (holiday-local-holidays).

(setq holiday-general-holidays
      '((holiday-fixed 1 1 "Новый год")
        (holiday-fixed 1 7 "Рождество (православное)")
        (holiday-fixed 2 23 "День защитника Отечества")
        (holiday-fixed 3 8 "Международный женский день")
        (holiday-fixed 5 1 "Праздник Весны и Труда")
        (holiday-fixed 5 9 "День Победы")
        (holiday-fixed 6 12 "День России")
        (holiday-fixed 11 4 "День народного единства")))

(setq holiday-other-holidays
      '((holiday-fixed 12 25 "Рождество (католическое)")
        (holiday-float 10 0 -1 "Последнее воскресенье октября — конец летнего времени")
        (holiday-float 3 0 -1 "Последнее воскресенье марта — начало летнего времени")
        (holiday-easter-etc 0 "Пасха (по григорианскому календарю)")
        (holiday-lunar-phases)))  ;; Автоматические фазы луны как "праздники".

(setq calendar-holidays (append holiday-general-holidays
                                holiday-other-holidays
                                holiday-local-holidays))  ;; Добавьте свои в holiday-local-holidays.

;;;; 4. Лунные фазы
;; Фазы луны — не только для астрологов, но и для планирования (например, садоводство).
;; Мы используем встроенный lunar.el для расчёта. Особенность: функция показывает
;; фазу на текущую дату, с возможностью расширения на будущие/прошлые дни.

(defun show-today-moon-phases ()
  "Показать лунные фазы сегодня (или ближайшие лунные дни). Использует lunar-phase для точности."
  (interactive)
  (let* ((calendar-date (calendar-current-date))
         (phase (lunar-phase calendar-date)))
    (message "Фаза луны: %s" (nth 3 phase))))

;;;; 5. Мировое время (world clock)
;; Для глобальных пользователей: отображает время в разных зонах. Мы добавляем
;; популярные города и кастомный формат. Особенность: %s в формате добавляет
;; название зоны для clarity.

(require 'time-date)  ;; Для зон и конверсий.
(require 'timeclock)  ;; Для логирования времени (опционально).

(setq display-time-world-list
      '(("Europe/Moscow"      "Москва")
        ("Europe/London"      "Лондон")
        ("Asia/Irkutsk"       "Иркутск")
        ("America/New_York"   "Нью-Йорк")
        ("Asia/Tokyo"         "Токио")
        ("Europe/Berlin"      "Берлин")
        ("Asia/Novosibirsk"   "Новосибирск")))

(setq display-time-world-time-format "%a %d.%m  %H:%M %Z %s") ;; День Дата Время Зона Город.

;;;; 6. Напоминания и простые оповещения (appt)
;; Appt — встроенный reminder: интегрируется с diary/org для событий. Мы активируем
;; звук, интервалы и окно для уведомлений. Особенность: хук с org-agenda-to-appt
;; автоматически извлекает напоминания из org-файлов.

(appt-activate 1)                     ;; Включить систему напоминаний.
(setq appt-audible t)                 ;; Звуковой сигнал для внимания.
(setq appt-display-interval 10)       ;; Повторять каждые 10 мин.
(setq appt-message-warning-time 15)   ;; Предупреждать за 15 мин.
(setq appt-display-format 'window)    ;; Показывать в отдельном окне.

;; Интеграция с org: автоматическое обновление напоминаний изagenda.
(when (require 'org-agenda nil t)
  (org-agenda-to-appt)
  (add-hook 'org-finalize-agenda-hook 'org-agenda-to-appt))

;;;; 7. Переводы и вычисления дат/времени
;; Конвертеры полезны для программистов/аналитиков: unix-time в дату и обратно.
;; Особенность: интерактивные функции с message для быстрого использования.

(defun pro/convert-unix-to-date (unixtime)
  "Перевести unixtime (секунды с 1970-01-01) в читаемую дату. Полезно для логов."
  (interactive "nВремя в формате Unix (секунды с 1970): ")
  (message "%s" (format-time-string "%Y-%m-%d %A %H:%M:%S" (seconds-to-time unixtime))))

(defun pro/current-unixtime ()
  "Показать текущее unixtime. Идеально для timestamp в скриптах."
  (interactive)
  (message "%d" (floor (float-time (current-time)))))  ;; Округляем до целого.

;;;; 8. Таймеры и автоматизация
;; Добавлено: таймеры — для отложенных задач. Помодоро — техника фокусировки
;; (25 мин работа + пауза). Особенность: run-at-time позволяет планировать
;; любые функции, например, напоминание через час.
;; Дополнение: улучшенный помодоро с циклами (работа + короткий перерыв + длинный перерыв),
;; а также функция для повторяющихся таймеров.

;; Улучшенный помодоро: 25 мин работа, 5 мин перерыв, после 4 циклов — 15 мин перерыв.
(defvar pro/pomodoro-cycles 0 "Счётчик циклов помодоро.")
(defun pro/pomodoro-start ()
  "Запустить улучшенный помодоро-таймер с циклами."
  (interactive)
  (message "Pomodoro стартовал: 25 мин фокуса.")
  (run-at-time (* 25 60) nil #'pro/pomodoro-break))

(defun pro/pomodoro-break ()
  "Обработать перерыв после помодоро."
  (setq pro/pomodoro-cycles (1+ pro/pomodoro-cycles))
  (if (= (mod pro/pomodoro-cycles 4) 0)
      (progn
        (message "Длинный перерыв: 15 мин.")
        (run-at-time (* 15 60) nil (lambda () (message "Перерыв завершён. Готовы к новому циклу?"))))
    (message "Короткий перерыв: 5 мин.")
    (run-at-time (* 5 60) nil (lambda () (message "Перерыв завершён. Начать новый помодоро?")))))

;; Повторяющийся таймер: например, напоминание каждые 30 мин.
(defun pro/set-repeating-timer (seconds message)
  "Установить повторяющийся таймер каждые SECONDS с MESSAGE."
  (interactive "nИнтервал (секунды): \nsСообщение: ")
  (run-with-timer seconds seconds (lambda () (message "%s" message))))

;; Пример будильника: установить на конкретное время.
(defun pro/set-alarm (time message)
  "Установить будильник на TIME (строка, как '14:30') с MESSAGE."
  (interactive "sВремя будильника (HH:MM): \nsСообщение: ")
  (let ((alarm-time (time-convert (date-to-time (concat (format-time-string "%Y-%m-%d ") time)) 'integer)))
    (run-at-time alarm-time nil (lambda () (message "Будильник: %s" message)))))

;;;; 9. Дополнительные фичи: Восходы/закаты и diary
;; Восходы/закаты: полезно для планирования дня (solar.el). Diary: персональный
;; журнал событий, интегрируется с calendar. Особенность: автоматический расчёт
;; по широте/долготе (настройте свои координаты).
;; Дополнение: функция для расчёта дней до события и интеграция с diary для автоматического показа.

;; (setq calendar-location-name "")        ;; Город для расчётов.
;; (setq calendar-latitude 50.0)              ;; Широта
;; (setq calendar-longitude 100.0)            ;; Долгота

(defun show-sunrise-sunset ()
  "Показать время восхода/заката на сегодня."
  (interactive)
  (message "%s" (solar-sunrise-sunset-string (calendar-current-date))))

;; Diary: включить отображение в календаре и отметки.
(setq calendar-view-diary-initially-flag t)
(setq calendar-mark-diary-entries-flag t)

;; Функция для расчёта дней до события.
(defun pro/days-to-event (date)
  "Рассчитать количество дней до DATE (формат 'MM/DD/YYYY')."
  (interactive "sДата события (MM/DD/YYYY): ")
  (let ((event-date (calendar-absolute-from-gregorian (calendar-extract-month (calendar-read-date t) 1)
                                                      (calendar-extract-day (calendar-read-date t) 1)
                                                      (calendar-extract-year (calendar-read-date t) 1)))
        (today (calendar-absolute-from-gregorian (calendar-current-date))))
    (message "Дней до события: %d" (- event-date today))))

;;;; 10. Эстетика и удобства
;; Визуальные улучшения: минимализм, маркеры праздников, рамки. Особенность:
;; window-divider для терминала, text-scale для увеличения (раскомментируйте).

(setq calendar-mark-holidays-flag t)          ;; Отмечать праздники цветом.
(setq calendar-remove-frame-by-deleting t)    ;; Удалять фрейм при закрытии.

(when (boundp 'window-divider-mode)
  (add-hook 'calendar-mode-hook #'window-divider-mode))

;; Опционально: увеличить текст в календаре.
;; (add-hook 'calendar-mode-hook (lambda () (text-scale-set 1)))

;;;; 11. Быстрые команды пользователя (краткая шпаргалка)
;; Мнемонические бинды для быстрого доступа. Особенность: все под C-c для consistency.
;; Дополнение: добавлены биндинги для новых функций, раскомментированы основные.

;; (global-set-key (kbd "C-c k") #'calendar)                 ;; Открыть календарь.
;; (global-set-key (kbd "C-c l") #'show-today-moon-phases)   ;; Фаза луны.
;; (global-set-key (kbd "C-c w") #'display-time-world)       ;; Мировое время.
;; (global-set-key (kbd "C-c u") #'pro/current-unixtime)     ;; Текущее unixtime.
;; (global-set-key (kbd "C-c p") #'pro/pomodoro-start)       ;; Запустить помодоро.
;; (global-set-key (kbd "C-c s") #'show-sunrise-sunset)      ;; Восход/закат.
;; (global-set-key (kbd "C-c d") #'pro/days-to-event)        ;; Дни до события.

;;;; 12. Финал
;; Завершаем модуль: provide для загрузки.

(provide 'про-время)
;;; про-время.el ends here
