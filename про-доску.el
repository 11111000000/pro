;;; –ø—Ä–æ-–¥–æ—Å–∫—É.el --- –ü—É–ª—å—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è -*- lexical-binding: t -*-
;;; Commentary:
;;; Code:
;;; –î–∞—à–±–æ—Ä–¥

(require 'all-the-icons)
(require 'calendar)
(require 'holidays)
(require 'shaoline)
(require 'lunar)

(defun –ø—Ä–æ-–¥–æ—Å–∫—É/—Ñ—É—Ç–µ—Ä (&optional _)
  "–í–µ—Ä–Ω—É—Ç—å –∫—Ä–∞—Å–∏–≤—ã–π —Ñ—É—Ç–µ—Ä: –¥–∞—Ç–∞/–≤—Ä–µ–º—è, –ø—Ä–∞–∑–¥–Ω–∏–∫ –∏ —Ñ–∞–∑–∞ –ª—É–Ω—ã (–∏–∫–æ–Ω–∫–∞).
_ ‚Äî –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç, –Ω—É–∂–µ–Ω –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å dashboard."
  (let* ((now (current-time))
         (date-str (format-time-string "%H:%M, %d %B %Y (%a)" now)) ; –ø—Ä–∏–º–µ—Ä: 15:12, 5 –∏—é–Ω—è 2024 (–°—Ä)
         ;; –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–∞–∑–¥–Ω–∏–∫–∏ (calendar/holidays)
         (cal-date (calendar-current-date))
         (holidays-today
          (let ((hs (calendar-check-holidays cal-date)))
            (and hs (mapconcat #'identity hs ", "))))
         ;; –õ—É–Ω–Ω–∞—è —Ñ–∞–∑–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ–º lunar.el + shaoline –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏)
         (moon
          (let* ((icons (if (boundp 'shaoline-moon-icons)
                            shaoline-moon-icons
                          ["üåë" "üåí" "üåì" "üåî" "üåï" "üåñ" "üåó" "üåò"]))
                 (jd (if (fboundp 'shaoline--jd-now)
                         (shaoline--jd-now)
                       ;; approximate Julian day from current time: JD = Unix/86400 + 2440587.5
                       (+ (/ (float-time (current-time)) 86400.0) 2440587.5)))
                 (synodic-month (if (boundp 'shaoline--synodic-month)
                                    shaoline--synodic-month
                                  29.530588853))
                 (next-new (lunar-new-moon-on-or-after jd))
                 (prev-guess (lunar-new-moon-on-or-after (- jd synodic-month)))
                 (prev-new (if (> prev-guess jd)
                               (lunar-new-moon-on-or-after (- jd (* 2 synodic-month)))
                             prev-guess))
                 (age (- jd prev-new))
                 (idx (min 7 (max 0 (floor (* age (/ 8.0 synodic-month)))))))
            (if (and (integerp idx) (<= 0 idx) (< idx 8))
                (aref icons idx)
              "‚òæ"))))
    (concat
     moon
     "  "
     (if holidays-today
         (concat holidays-today " ‚Ä¢ ")
       "")
     date-str)))

(use-package dashboard
  :ensure t
  :defer t
  :defines (dashboard-mode-map)
  :bind (
         ("<f5>" . dashboard-refresh-buffer)
         ("C-<f5>" . dashboard-refresh-buffer)
         :map dashboard-mode-map
         ("C-g" . keyboard-quit))
  :hook ((dashboard-mode-hook . variable-pitch-mode))
  :custom
  (dashboard-startup-banner "~/pro/lisp.png")
  (dashboard-banner-logo-title "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–≤–æ–±–æ–¥–Ω—É—é —Å–∏—Å—Ç–µ–º—É!")
  (dashboard-center-content t)
  (dashboard-items '((recents  . 3)
                     (bookmarks . 3)
                     (projects . 3)
                     ;;(agenda . 5)
                     (registers . 5)))
  (dashboard-item-names '(("Recent Files:" . "–ù–µ–¥–∞–≤–Ω–æ –æ—Ç–∫—Ä—ã—Ç—ã–µ —Ñ–∞–π–ª—ã:")
                          ("Agenda for today:" . "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:")
                          ("Agenda for the coming week:" . "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é:")
                          ("Bookmarks:" . "–ó–∞–∫–ª–∞–¥–∫–∏:")
                          ("Projects:" . "–ü—Ä–æ–µ–∫—Ç—ã:")
                          ("Registers:" . "–†–µ–≥–∏—Å—Ç—Ä—ã")))
  (dashboard-set-heading-icons t)
  (dashboard-set-file-icons t)
  (dashboard-set-navigator nil)
  (dashboard-navigator-buttons
   `(;; line1
     ((,(if window-system (all-the-icons-octicon "mark-github" :height 1.1 :v-adjust 0.0) nil)
       "Homepage"
       "Browse homepage"
       (lambda (&rest _) (browse-url "homepage")))
      ("‚òÖ" "Star" "Show stars" (lambda (&rest _) (show-stars)) warning)
      ("?" "" "?/h" #'show-help nil "<" ">"))
     ;; line 2
     ((,(if window-system (all-the-icons-faicon "linkedin" :height 1.1 :v-adjust 0.0) nil)
       "Linkedin"
       ""
       (lambda (&rest _) (browse-url "homepage")))
      ("‚öë" nil "Show flags"
       (lambda (&rest _) (message "flag")) error))))
  ;; --- –ö—Ä–∞—Å–∏–≤—ã–π —Ñ—É—Ç–µ—Ä —Å –¥–∞—Ç–æ–π, –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–º –∏ –ª—É–Ω–æ–π ---
  ;; –§—É—Ç–µ—Ä –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ Dashboard.
  (dashboard-footer-messages (list (–ø—Ä–æ-–¥–æ—Å–∫—É/—Ñ—É—Ç–µ—Ä)))
  (dashboard-footer-icon (if window-system (all-the-icons-octicon "dashboard"
                                                                  :height 1.1
                                                                  :v-adjust -0.05
                                                                  :face 'font-lock-keyword-face) "."))
  :config
  (defun –ø—Ä–æ-–¥–æ—Å–∫—É/–æ–±–Ω–æ–≤–∏—Ç—å-—Ñ—É—Ç–µ—Ä ()
    "–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π —Ñ—É—Ç–µ—Ä Dashboard."
    (setq dashboard-footer-messages (list (–ø—Ä–æ-–¥–æ—Å–∫—É/—Ñ—É—Ç–µ—Ä))))
  (add-hook 'dashboard-mode-hook #'–ø—Ä–æ-–¥–æ—Å–∫—É/–æ–±–Ω–æ–≤–∏—Ç—å-—Ñ—É—Ç–µ—Ä)
  (advice-add 'dashboard-refresh-buffer :before #'–ø—Ä–æ-–¥–æ—Å–∫—É/–æ–±–Ω–æ–≤–∏—Ç—å-—Ñ—É—Ç–µ—Ä)
  :init
  ;;(dashboard-refresh-buffer)
  )

(provide '–ø—Ä–æ-–¥–æ—Å–∫—É)
;;; –ø—Ä–æ-–¥–æ—Å–∫—É.el ends here
