
* Персональное рабочее окружение  ☮ λ ☯
** Фундаментальная база

- В основе /персонального рабочего окружения/ интерпретатор классического диалекта /Лисп-2/. Динамическая природа языка позволяет менять  среду в интерактивном режиме;
- Это "/литературная программа/", которую может прочитать и понять любой пользователь, даже  малознакомый с языками программирования, изнутри /окружения/ код конфигурации выглядит как читабельная статья документации;
- Целевая платформа  - /POSIX-совместимая/ ОС на базе /GNU/ или /Андроид/ (в /Termux/) с классической графической подсистемой /Xorg/, /ПРО/ предоставляет удобный интерфейс пользователя для многочисленных компонентов Юникс, однако в виде приложения /ПРО/ может быть запущено и поверх ОС семейств /Windows/ или /MacOS/

** Интегрированная среда

- Интерпретатор /Лисп/ является интерфейсом для прочих программ, вся мощность /Юникс/ доступна посредством высокоуровневого языка, но не заменяется им - в каждом отдельном случае используется инструмент, подходящий для конкретной задачи; 
- /Моды/ (режимы)  расширяют функциональность среды, используя и дополняя возможности уже работающих инструментов, но не заменяют их - в разных /модах/ сохраняются привычные сочетания и знакомое, предсказуемое поведение системы в целом. Эта философия принципиально отличается от распространённого подхода (Windows/MacOS), когда для решения своих задач вы скачиваете и устанавливаете в систему новые бинарные «приложения», которые оказываются интегрированы между собой только через общесистемные сервисы, а чаще просто никак.;
- /Моды/ образуют симбиозы. Например, режим управления проектами (projectile) интегрирован с режимом для работы с репозитариями GIT (magit), а режим поддержки конкретного языка программирования использует инструменты анализа кода (Eglot), общие для всех языков, а в режиме Телеграма работает перевод выделенного текста (`<C-c v>`);
- /Моды/  обеспечивают контекст. Например, режим Управления Проектами (projectile) предоставляет функции для работы терминала (`s-‘`) от корневой директории текущего проекта;
- Во внешних Xorg приложениях поддерживаются универсальные клавиши навигации курсора, вставки из стека (C-y, M-y), переключения метода ввода (C-/) итп;

** Универсальное и гибкое управление окнами, вкладками и рабочими столами

- Один из /фреймов/ всегда на экране;
- На /фрейме/ одна или более /вкладок/, имя вкладки можно задать (s-r);
- Содержимое /вкладки/ может быть поделено на несколько /окон/, которыми можно управлять, и даже делать плавающими;
- В каждом /окне/ отображается какой-либо /буфер/ - это открытый файл или приложение, имя буфера можно задать (s-R), один буфер может отображаться в нескольких окнах;
- Конфигурацию фрейма, вкладок и окон можно «сохранить», чтобы вернуться;
- А главное, в отличии от MacOS/Windows - /окна/ можно легко «откатить» к предыдущмм состояниям (`<s-u>/<s-U>`);

**  Программирование на всех языках

- Если язык программирования существует, то про это есть /Мод/;
- Протокол Языкового Сервера (LSP) добавляет современные инструменты работы с кодом;
- Протокол Дебаггера (DAP) обеспечивает  отладку всевозможных интерпретаторов;
- Подсказки по коду из разнообразных источников;
- Умное семантическое дополнение;  
- навигация по проектам;
- семантический и структурный анализ;
- генерация UML;
...  

** Организация дел

- Управление задачами;
- Личная Wiki ;
- Учёт времени;
... 

** Интернет и коммуникация

- Встроеный текстовый браузер для безопасного просмотра нормальных HTML страниц;
- Удобный и многофункциональный почтовый клиент;
- Собственный интерфейс для любых интернет-сервисов; 
- Клиент новостных лент RSS, источники добавляются в простой org-файл
- Клиент IRC;
- Клиент Telegram с многооконностью и масштабированием текста;
...

** Искусственный Интеллект

- Распознавание речи;
- Дописывание кода;
- Перевод текста;
...

** Проекты, репозитории

- Автоматическое ппределение проектов
- Быстрое переключение проектов
- Удобный процесс работы с GIT
- Поиск по проектам
... 

** Контейнеры и кластеры

- Просмотр запущенных контейнеров
- Просмотр журналов контейнера
- Подключение к оболочке в контейнере
  
** Простота и воспроизводимость

- Модульная организация;
- Сочетания клавиш в одной простой текстовой таблице ([[./сочетания-клавиш.org]]);
- Сценарии работы в системе расширяются благодаря /режимам/, /обработчикам/ и /перехватчикам/;
- Сохранение конфигураций рабочих окружений, окон и вкладок, мгновенное воспроизведение, когда они потребуются;

** Минимализм

- Цветовая тема в градациях серого, интенсивное использование типографики, рациональное использование цветов;
- /статус/ текущего /буфера/, часы и трей с иконками - всё это находится в /минибуфере/, пока тот неактивен;
 
** Хороший встроеный редактор

- Классический стиль комбинированных сочетаний с модальностью (Режим Бога);
