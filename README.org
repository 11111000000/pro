* Персональное рабочее окружение  ☮ λ ☯

** Прочный фундамент

- В основе - интерпретатор /LISP/, вокруг которого построены средства разработки, редактор и всё прочее окружение пользователя;
- Это /литературная программа/, которую легко понять, даже если вы не знакомы с другими языками программирования;
- Концентрированный опыт нескольких поколений хакеров - в это вложены десятки лет совместного труда тысяч людей со всего мира;

** Интегрированная среда

- /LISP/ является прекрасным интерфейсом для внешних программ и OS, т.о. вся мощность /UNIX/ доступна посредством высокоуровневого языка, но не заменяется им; 
- Моды (режимы)  расширяют функциональность среды, используя и дополняя возможности уже работающих инструментов, но не заменяют их. В разных /модах/ сохраняются привычные сочетания и знакомое, предсказуемое поведение системы в целом. Эта философия принципиально отличается от распространённого подхода (Windows/MacOS), когда для решения своих задач вы скачиваете и устанавливаете в систему новые бинарные «приложения», которые оказываются интегрированы между собой только через общесистемные сервисы, а чаще просто никак, слабо конфигурируются и имеют тенденцию переизобретать  уже хорошо решённые задачи;
- Моды образуют симбиозы: например, режим управления проектами интегрирован с режимом для работы с репозитариями GIT, а режим поддержки конкретного языка программирования использует, общие для всех языков, инструменты анализа кода, а в режиме Телеграма работает перевод выделенного текста (`<C-c v>`);
- /Моды/ создаю контексты: например, режим Управления Проектами (projectile) предоставляет функции для работы терминала (`s-‘`) от корневой директории текущего проекта;
- Во внешних приложениях также поддерживаются основные клавиши навигации курсора, вставки из стека, переключения языка итп;

** Универсальное и гибкое управление окнами, вкладками и рабочими столами

- Один из /фреймов/ всегда на экране;
- На /фрейме/ одна или более /вкладок/;
- Содержимое /вкладки/ может быть поделено на несколько /окон/;
- В каждом /окне/ отображается какой-либо один /буфер/ - файл или приложение;
- Один /буфер/ может отображаться в нескольких /окнах/;
- Конфигурацию фрейма, вкладок и окон можно «сохранить» ;
- Действия с /окнами/ и /буферами/ можно легко «откатить» к предыдущмм состояниям (`<s-u>/<s-U>`);
  …

**  Программирование на всех языках

- Если язык программирования существует, то про это есть /Мод/;
- Протокол Языкового Сервера (LSP) добавляет современные инструменты работы с кодом;
- Протокол Дебаггера (DAP) обеспечивает  отладку всевозможных интерпретаторов;
- Подсказки по коду из разнообразных источников;
- Умное семантическое дополнение;  
- навигация по проектам;
- семантический и структурный анализ;
- генерация UML;
...  

** Организация дел

- Управление задачами;
- Личная Wiki ;
- Учёт времени;
... 

** Интернет и коммуникация

- Текстовый браузер для безопасного просмотра нормальных HTML страниц;
- Удобный и многофункциональный почтовый клиент, для получения почты используются внешние утилиты;
- Собственные  интерфейсы для любых интернет-сервисов; 
- Клиент новостных лент RSS, источники добавляются в простой org-файл
- Клиент IRC;
- Клиент Telegram с масштабированием текста;
- Возможность видеть на экране сразу несколько чатов даже из разных источников и удобно управлять ими
...

** Простота и минимализм

- Ничего лишнего;
- Цветовая тема в градациях серого, интенсивное использование типографики, рациональное использование цветов;
- /статус/ текущего /буфера/, часы и трей с иконками - всё это находится в /минибуфере/, пока тот неактивен;
...  

** Искусственный Интеллект

- Распознавание речи;
- Дописывание кода;
- Перевод текста;
...

** Проекты, репозитории

- Автоматическое ппределение проектов
- Быстрое переключение проектов
- Удобный процесс работы с GIT
- Поиск файлов      

** Контейнеры и кластеры

- Просмотр запущенных контейнеров
- Просмотр журналов контейнера
- Подключение к оболочке в контейнере
  
** Для себя

- Модульная организация конфигурации, литературный код;
- Быстрые сочетания клавиш  в простой текстовой таблице ([[./сочетания-клавиш.org]]);
- Любой сценарий работы в системе расширяется благодаря /режимам/, /обработчикам/ и /перехватчикам/;
- Удобно описывать уникальные конфигурации рабочих окружений, окон и вкладок, чтобы затем мгновенно воспроизводить, когда они потребуются;

** Хороший встроеный редактор

- Классический стиль комбинированных сочетаний с модальностью (Режим Бога);


